import { client as WebSocketClient } from 'websocket';
import { Region } from '../config';
import Webhook, { WebhookTriggers } from '../models/webhook';
import { WebhookDelta } from '../models/webhook-notification';
export interface OpenWebhookTunnelOptions {
    onMessage: (msg: WebhookDelta) => void;
    onConnectFail?: (error: Error) => void;
    onError?: (error: Error) => void;
    onClose?: (wsClient: WebSocketClient) => void;
    onConnect?: (wsClient: WebSocketClient) => void;
    region?: Region;
    triggers?: WebhookTriggers[];
}
/**
 * Open a webhook tunnel and register it with the Nylas API
 * 1. Creates a UUID
 * 2. Opens a websocket connection to Nylas' webhook forwarding service,
 *    with the UUID as a header
 * 3. Creates a new webhook pointed at the forwarding service with the UUID as the path
 *
 * When an event is received by the forwarding service, it will push directly to this websocket
 * connection
 *
 * @param config Configuration for the webhook tunnel, including callback functions,
 * region, and events to subscribe to
 * @return The webhook details response from the API
 */
export declare const openWebhookTunnel: (config: OpenWebhookTunnelOptions) => Promise<Webhook>;
